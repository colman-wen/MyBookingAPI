{
  "openapi": "3.0.1",
  "info": {
    "title": "MyBookingAPI",
    "version": "1.0"
  },
  "paths": {
    "/api/Booking/{bookingID}": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Endpoint to retrieve a specific booking",
        "parameters": [
          {
            "name": "bookingID",
            "in": "path",
            "description": "The booking ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          }
        }
      }
    },
    "/api/Booking": {
      "get": {
        "tags": [
          "Booking"
        ],
        "summary": "Endpoint to retrieve a list of bookings for the signed-in user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Booking"
        ],
        "summary": "Endpoint for user to book tickets",
        "requestBody": {
          "description": "booking information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Booking"
        ],
        "summary": "Endpoint for user to update an existing booking",
        "requestBody": {
          "description": "Updated booking Information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Booking"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Booking"
        ],
        "summary": "Endpoint to delete a specific booking",
        "parameters": [
          {
            "name": "bookingID",
            "in": "query",
            "description": "The booking ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    },
    "/Error": {
      "get": {
        "tags": [
          "Error"
        ],
        "summary": "Error handling endpoint",
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Event": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Endpoint for retrieving all Available Events",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Event"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Event/{eventID}": {
      "get": {
        "tags": [
          "Event"
        ],
        "summary": "Endpoint to retrieve a specific event",
        "parameters": [
          {
            "name": "eventID",
            "in": "path",
            "description": "The event ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Event"
                }
              }
            }
          }
        }
      }
    },
    "/api/Payment": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Endpoint for user to make a payment for a Booking",
        "parameters": [
          {
            "name": "bookingID",
            "in": "query",
            "description": "the booking ID to be paid",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Endpoint to retrieve a list of Payments for the signed-in user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Payment"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Payment/{paymentID}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Endpoint to retrieve a specific Payment",
        "parameters": [
          {
            "name": "paymentID",
            "in": "path",
            "description": "The Payment ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        }
      }
    },
    "/api/User": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint for user to sign in",
        "operationId": "SignIn",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint for user to create an account",
        "operationId": "CreateAccount",
        "requestBody": {
          "description": "User account information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint for user to update an existing account",
        "operationId": "UpdateAccount",
        "requestBody": {
          "description": "User Account Information",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Endpoint for user to delete an existing account",
        "operationId": "DeleteAccount",
        "parameters": [
          {
            "name": "userID",
            "in": "query",
            "description": "User Account ID",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Booking": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "description": "The User ID who books the tickets",
            "nullable": true
          },
          "bookingID": {
            "type": "string",
            "description": "A unique ID for this Booking. Value can be assigned after Booking has been placed against the event",
            "nullable": true
          },
          "eventID": {
            "type": "string",
            "description": "The ID of event to be booked for the user",
            "nullable": true
          },
          "counts": {
            "type": "object",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Counts the number of tickets to be booked with each Event Type",
            "nullable": true
          },
          "paid": {
            "type": "boolean",
            "description": "Indicates whether a Payment has been made against this Booking"
          }
        },
        "additionalProperties": false,
        "description": "A model to record when a user book tickets for a event"
      },
      "Event": {
        "type": "object",
        "properties": {
          "eventId": {
            "type": "string",
            "description": "A unique Identifier for each Event",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The Event Name",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "The Date of when the Event will take place",
            "format": "date-time"
          },
          "time": {
            "type": "string",
            "description": "The time of when the Event will happen",
            "format": "date-time"
          },
          "venue": {
            "type": "string",
            "description": "The location of where the event will take place",
            "nullable": true
          },
          "prices": {
            "type": "object",
            "additionalProperties": {
              "type": "number",
              "format": "double"
            },
            "description": "Price for a ticket under each Event Type",
            "nullable": true
          },
          "availibility": {
            "type": "integer",
            "description": "Number of available tickets left",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Model for an event"
      },
      "Payment": {
        "type": "object",
        "properties": {
          "paymentID": {
            "type": "string",
            "description": "A unique identifier for a Payment",
            "nullable": true
          },
          "bookingID": {
            "type": "string",
            "description": "The ID of Booking to be paid",
            "nullable": true
          },
          "paymentType": {
            "type": "string",
            "description": "Payment type of how the payment is made",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "The total amount to be paid for the Booking",
            "format": "double"
          },
          "currency": {
            "type": "string",
            "description": "The Currency of payment to be paid",
            "nullable": true
          },
          "paid": {
            "type": "boolean",
            "description": "Indicates whether the Payment has been completed"
          }
        },
        "additionalProperties": false,
        "description": "Model for a Ticket Payment"
      },
      "Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message of the response",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "Error Code of the response. 0 means successful",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "Model of responds for a request"
      },
      "SignInResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message of the response",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "Error Code of the response. 0 means successful",
            "format": "int32"
          },
          "token": {
            "type": "string",
            "description": "Access token for a successful sign-in",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model of responds for a sign in request"
      },
      "User": {
        "type": "object",
        "properties": {
          "userID": {
            "type": "string",
            "description": "A unique identifier of a User",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "description": "Name of the User",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "description": "Email of the User",
            "nullable": true
          },
          "password": {
            "type": "string",
            "description": "Password of the User",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "Model for a User"
      }
    }
  }
}